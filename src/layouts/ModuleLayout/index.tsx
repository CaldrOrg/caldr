import { useCaldrStore } from "@stores/index";
import { IconBrandGithub, IconFileSettings, IconMoon, IconPrinter, IconSun } from "@tabler/icons-react";
import { Helmet } from "react-helmet-async";
import { Link, useLocation, useNavigate } from "react-router";
import styles from "./styles.module.scss";

export default function ModuleLayout({ children, moduleName, moduleDescription, className }: ModuleLayoutProps) {
	const { toggleTheme, theme, printPage } = useCaldrStore();

	const navigate = useNavigate();
	const location = useLocation();

	return (
		<div className={styles.moduleLayout}>
			<Helmet>
				<title>{moduleName} | Caldr</title>
				<meta name="description" content={moduleDescription} />
			</Helmet>

			<header>
				<Link to="/">
					<img src={theme === "light" ? "/caldr_logo.png" : "/caldr_logo_dark.png"} alt="Caldr Logo" />
				</Link>
				<div>
					<h1>{moduleName}</h1>
					<h2>{moduleDescription}</h2>
				</div>
				<span className={styles.spacer}></span>
				<button
					onClick={() => navigate("/project_settings")}
					title="Project Settings"
					disabled={location?.pathname === "/project_settings"}>
					<IconFileSettings />
				</button>
				<button
					onClick={printPage}
					title="Print Page">
					<IconPrinter />
				</button>
				<button
					onClick={toggleTheme}
					title="Toggle Theme">
					{theme === "light" && <IconMoon />}
					{theme === "dark" && <IconSun />}
				</button>
				<Link to="https://github.com/CaldrPro/caldr/tree/master" target="_blank">
					<button>
						<IconBrandGithub />
					</button>
				</Link>
			</header>
			<nav>
				<button onClick={() => navigate(-1)}>‚Üê Back</button>
			</nav>
			<main {...{ className }}>
				{children}
			</main>
			<footer>
				<p>
					This tool is intended for reference use only.
					All calculations and outputs generated by Caldr must be independently reviewed and verified by a licensed engineer or the engineer of record (EOR).
					Caldr assumes no responsibility for the accuracy, completeness, or applicability of its outputs in final designs or construction documents.
				</p>
			</footer>
		</div>
	);
}

interface ModuleLayoutProps extends React.PropsWithChildren<{}> {
	moduleName: string;
	moduleDescription: string;
	className?: string;
}
